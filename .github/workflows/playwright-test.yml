on:
  workflow_dispatch:
  push:
    branches: main

jobs:
  playwright-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
            substituters = https://nix-community.cachix.org https://cache.nixos.org
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: |
          mkdir -p ~/.config/home-manager
          cat <<EOF > ~/.config/home-manager/home.nix
            { pkgs, ...}:
            let
              inherit (pkgs.stdenv.hostPlatform) isDarwin;
            in
            {
              home.username = "runner";
              home.homeDirectory = "/\${if isDarwin then "Users" else "home"}/runner";
              home.stateVersion = "24.11";
              services.espanso.enable = true;
            }
          EOF
          export NIX_PATH=nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixos-unstable.tar.gz
          echo $NIX_PATH
          nix run github:phanirithvij/home-manager/espanso-wl-no-pr -- switch
      - if: ${{ runner.os == 'Linux' }}
        run: |
          git clone https://github.com/nix-community/noogle
          cd noogle
          nix build .#ui
          cd ..
          sudo cp -r ./noogle/result/lib/node_modules/noogle/out out
          sudo chmod 777 -R out
      - if: ${{ runner.os == 'macOS' }}
        run: |
          mkdir out
          cd out
          echo "<html><body>hi</body></html>" > index.html
      - run: |
          echo HI
          #./result-pf/bin/pagefind -s out --serve --verbose &
          #nix profile install nixpkgs#caddy
          #caddy reverse-proxy --from :2080 --to :1414
